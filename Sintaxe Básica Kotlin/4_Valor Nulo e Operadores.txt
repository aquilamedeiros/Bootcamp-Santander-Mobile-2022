		#################
		#  NULLABILITY  #
		#################

* Qualquer tipo pode ser nulo, porém isso deve ser explicitado na 
declaração de variável através do uso de interrogação (?);

* A interência de tipo não atribui nullability;

*Ex¹.: var month:Int? = null -> atribui valor null corretamente em month

*Ex².: var day:Int = null -> Erro de compilação (Null can not be a
			     value of a non-null type Int)


		##########################
		# OPERADORES ARITMÉTICOS #
		##########################

* Os operadores podem ser chamados tanto como expressão quanto como 
comandos. O resultado será o mesmo;

* A função de soma (+) também funciona para concatenar Strings;

    ###############################################################
    #    Função     |   Expresão   |   Comando   |   Atribuição   #
    ###############################################################
    # Soma          |    a + b     |  a.plus(b)  |     a += b     #							 
    # Subtração     |    a - b     |  a.minus(b) |     a -= b     #                         
    # Multiplicação |    a * b     |  a.times(b) |     a *= b     #
    # Divisão       |    a / b     |  a.div(b)   |     a /= b     #
    # Resto         |    a % b     |  a.mod(b)   |     a %= b     #
    ###############################################################


# Exemplo Usando expressao:
fun main() {
	val count = 10
	val times = 9
	soma = count + times
	println(soma) // Resultado 19
}

# Exemplo  Usando comando:
fun main(){
	val count = 10
	val times = 9
	soma = count.plus(times)
	println(soma) // Resultado 19
}
